
React memo: it is a High order component, it will stop unnecessary rendering of functional components of its props. it will improve the performance of the functional components.

Example:

App.js:
import {useState} from 'react';
import ChildA from "./ChildA";
import ChildB from "./ChildB";

const Parent=()=>{
  const[count, setCount]=useState(0);
  const increment=()=>{
    setCount(c=>c+1);
  };
  return(
    <div>
      <ChildA/>
      <ChildB count={count} increment={increment}/>
    </div>
  )
};

export default Parent;



ChildA.js:
// const ChildA=()=>{
//     console.log("Child A rendered")
//     return <h2> This is Child A</h2>
// };
// export default ChildA;

import {memo} from 'react';
const ChildA=()=>{
    console.log("Child A rendered")
    return <h2>This is Child A</h2>
};
export default memo(ChildA);




ChildB.js:
const ChildB=({count, increment})=>{
    console.log("Child B is renedered")
    return(
        <div>
            <h1>Count: {count}</h1>
            <button onClick={increment}> Increment </button>
        </div>
    )
}
export default ChildB;
